
1，当JSP被部署之后，它会一直待在服务器上，直到第一个请求的到来。
2，容器尝试将 JSP 文件转换成一个 servlet 类的 Java 文件，该阶段会发现 JSP 语法错误，具体流程如下：
	1，查看指令，得到转换时可能需要的信息。
	2，创建一个 HttpServlet 子类。
	3，如果一个 page 指令有 import 属性，它会在类文件的最上面写 import 语句。
	4，如果有声明，容器将这些声明写到类文件中，通常放在类声明下面，并在服务方法前面。
	5，建立服务方法，具体的方法名是 _jspService()。该方法由 servlet 超类被覆盖的 service() 方法调用，同时容器会声明并初始化所有隐式对象。
3，容器尝试将这个 servlet 的 Java 源文件编译成 .class 文件，该阶段会发现 Java 语法错误。
4，容器加载新生成的 servlet 类（classloader）。
5，容器实例化 servlet，并导致 servlet 的 jspInit() 方法运行。
6，容器创建一个新线程来处理这个客户的请求，servlet 的  _jspService() 方法运行。

在JSP的生命周期中，整个转换和编译步骤只发生一次。
